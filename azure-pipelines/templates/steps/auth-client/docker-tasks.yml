# File: azure-pipelines\templates\docker-instrumented-test.yml
# Description: Template to run Instrumented test for Supported API levels

parameters:
- name: azureContainerRegistryImage
  default: authclient.azurecr.io/samples/dbi-instrumented-api30
- name: androidProject
  default: self
- name: EnvVstsMvnAccount
  default: ''

steps:
- task: PostBuildCleanup@3
  condition: always()
  displayName: Post build clean up
- checkout: ${{ parameters.androidProject }}
  clean: true
  submodules: recursive
- script: touch env.list
  displayName: 'Create Environment file'
- script: echo "${{ parameters.EnvVstsMvnAccount }}=$(mvnAccessToken)" >> env.list
  condition: ne('${{ parameters.EnvVstsMvnAccount }}', '')
  displayName: set mvnAccessToken in env.file
- script: echo "LAB_SECRET=$(AndroidAutomationRunnerAppSecret)" >> env.list
  condition: ne(variables['AndroidAutomationRunnerAppSecret'], '')
  displayName: set lab secret in env.file
- script: docker --version
  displayName: Docker Version
- script: |
    if docker image inspect $DOCKERIMAGE; then
      echo "Image is already installed"
    else
      echo "Image is not installed... Pulling $DOCKERIMAGE"
      docker pull $DOCKERIMAGE
    fi
  env:
    DOCKERIMAGE: ${{ parameters.azureContainerRegistryImage }}
  displayName: Pulling Image from ACR
- script: |
    docker container kill $(docker ps -q)
    docker system prune --volumes -f
  displayName: Kill all running containers if existing, and prune containers to avoid running out of disk space.
- script: |
    echo docker run --privileged --env-file env.list --cpus="3" --memory="12g" -v "$PWD":/home/gradle/ -w /home/gradle/ $DOCKERIMAGE sh scripts/run-instrumented-tests.sh
    docker run --privileged --env-file env.list --cpus="3" --memory="12g" -v "$PWD":/home/gradle/ -w /home/gradle/ $DOCKERIMAGE sh scripts/run-instrumented-tests.sh
  env:
    DOCKERIMAGE: ${{ parameters.azureContainerRegistryImage }}
  displayName: 'Build and test inside docker container'
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    displayName: 'Publish Test Results'
    mergeTestResults: false
    testRunTitle: '${{ parameters.androidProject }} ${{ parameters.azureContainerRegistryImage }}'
- script: |
    docker container kill $(docker ps -q)
    docker system prune --volumes -f
    docker run --privileged --env-file env.list --cpus="3" --memory="12g" -v "$PWD":/home/gradle/ -w /home/gradle/ $DOCKERIMAGE gradle clean
  env:
    DOCKERIMAGE: ${{ parameters.azureContainerRegistryImage }}
  condition: always()
  displayName: Gradle clean
- script: |
    docker container kill $(docker ps -q)
    docker system prune --volumes -f
  condition: always()
  displayName: Kill all running containers if existing, and prune containers to avoid running out of disk space.
- script: docker system df
  condition: always()
  displayName: Docker status
